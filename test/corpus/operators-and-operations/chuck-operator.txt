===============
ChucK operator
===============

// a unit generator patch - the signal flow is apparent
// (in this case, => connects two unit generators)
SinOsc b => Gain g => BiQuad f => dac;

// add 4 to foo, chuck result to new 'int' variable 'bar'
// (in this case, => assigns a value to a variable (int)
4 + foo => int bar;

// chuck values to a function == function call
// (same as Math.rand2f( 30, 1000))
( 30, 1000 ) => Math.rand2f;

// assign 4 to variable foo
4 => int foo;

// assign 1.5 to variable bar
1.5 => float bar;

// assign duration of 100 millisecond to duh
100::ms => dur duh;

// assign the time "5 second from now" to later
5::second + now => time later;

// using @=> is same as => for primitive types
4 @=> int foo;

// assign 1.5 to variable bar
1.5 @=> float bar;

// (only @=> can perform reference assignment on objects)

// reference assign moe to larry
// (such that both moe and larry reference the same object)
Object moe @=> Object @ larry;

// array initialization
[ 1, 2 ] @=> int ar[];

// using new
new Object @=> moe;

// add 4 to foo and assign result to foo
foo + 4 => foo;

// add 4 to foo and assign result to foo
4 +=> foo;

// subtract 10 from foo and assign result to foo
// remember this is (foo-10), not (10-foo)
10 -=> foo;

// 2 times foo assign result to foo
2 *=> foo;

// divide 4 into foo and assign result to foo
// again remember this is (foo/4), not (4/foo)
4 /=> foo;

// mod foo by T and assign result to foo
T %=> foo;

// bitwise AND 0xff and bar and assign result to bar
0xff &=> bar;

// bitwise OR 0xff and bar and assign result to bar
0xff |=> bar;

---

(source_file
  (comment)
  (comment)
  (chuck_operation
    (chuck_operation
      (chuck_operation
        (class_declaration
          (class_identifier)
          (variable_identifier))
        (class_declaration
          (class_identifier)
          (variable_identifier)))
      (class_declaration
        (class_identifier)
        (variable_identifier)))
    (keyword
      (global_unit_generator)))
  (comment)
  (comment)
  (chuck_operation
    (binary_expression
      (int)
      (operator)
      (variable_identifier))
    (variable_declaration
      (primitive_type)
      (variable_identifier)))
  (comment)
  (comment)
  (chuck_operation
    (int)
    (int)
    (member_identifier
      (class_identifier)
      (variable_identifier)))
  (comment)
  (chuck_operation
    (int)
    (variable_declaration
      (primitive_type)
      (variable_identifier)))
  (comment)
  (chuck_operation
    (float)
    (variable_declaration
      (primitive_type)
      (variable_identifier)))
  (comment)
  (chuck_operation
    (dur
      (int)
      (duration_identifier))
    (variable_declaration
      (primitive_type)
      (variable_identifier)))
  (comment)
  (chuck_operation
    (binary_expression
      (dur
        (int)
        (duration_identifier))
      (operator)
      (keyword))
    (variable_declaration
      (primitive_type)
      (variable_identifier)))
  (comment)
  (chuck_operation
    (int)
    (variable_declaration
      (primitive_type)
      (variable_identifier)))
  (comment)
  (chuck_operation
    (float)
    (variable_declaration
      (primitive_type)
      (variable_identifier)))
  (comment)
  (comment)
  (comment)
  (chuck_operation
    (class_declaration
      (class_identifier
        (reference_type))
      (variable_identifier))
    (reference_declaration
      (class_identifier
        (reference_type))
      (variable_identifier)))
  (comment)
  (chuck_operation
    (array
      (int)
      (int))
    (array_declaration
      (primitive_type)
      (array_identifier
        (variable_identifier))))
  (comment)
  (chuck_operation
    (class_instantiation
      (class_identifier
        (reference_type)))
    (variable_identifier))
  (comment)
  (chuck_operation
    (binary_expression
      (variable_identifier)
      (operator)
      (int))
    (variable_identifier))
  (comment)
  (chuck_operation
    (int)
    (variable_identifier))
  (comment)
  (comment)
  (chuck_operation
    (int)
    (variable_identifier))
  (comment)
  (chuck_operation
    (int)
    (variable_identifier))
  (comment)
  (comment)
  (chuck_operation
    (int)
    (variable_identifier))
  (comment)
  (chuck_operation
    (class_identifier)
    (variable_identifier))
  (comment)
  (chuck_operation
    (hexidecimal)
    (variable_identifier))
  (comment)
  (chuck_operation
    (hexidecimal)
    (variable_identifier)))
