==============
Logical invert
==============

// logical invert
if( !true == false )
  <<<"yes">>>;

---

(source_file
  (comment)
  (conditional
    (binary_expression
      (negation_expression
        (keyword
          (boolean_literal_value)))
      (operator)
      (keyword
        (boolean_literal_value)))
    (statement
      (debug_print
        (string)))))

========
Negative
========

// negative
-1 => int foo;

---

(source_file
  (comment)
  (statement
    (chuck_operation
      (int)
      (chuck_operator)
      (variable_declaration
        (primitive_type)
        (variable_identifier)))))

=====================
Object instantiation
=====================

// instantiate object
new object @=> object @ bar;

---

(source_file
  (comment)
  (statement
    (chuck_operation
      (class_instantiation
        (variable_identifier))
      (chuck_operator)
      (reference_declaration
        (variable_identifier)
        (variable_identifier)))))
