=======
Members
=======

// define class X
class X
{
    // declare instance variable 'm_foo'
    int m_foo;
    // another instance variable 'm_bar'
    float m_bar;
    // yet another, this time an object
    Event m_event;

    // function that returns value of m_foo
    fun int getFoo() { return m_foo; }

    // function to set the value of m_foo
    fun void setFoo( int value ) { value => m_foo; }

    // calculate something
    fun float calculate( float x, float y )
    {
        // insert code
    }

    // print some stuff
    fun void print()
    {
        <<< m_foo, m_bar, m_event >>>;
    }
}

// instantiate an X
X x;

// set the Foo
x.setFoo( 5 );
// print the Foo
<<< x.getFoo() >>>;

// call print
x.print();

---

(source_file
  (comment)
  (class_definition
    (class_identifier)
    (block
      (comment)
      (statement
        (variable_declaration
          (primitive_type)
          (variable_identifier)))
      (comment)
      (statement
        (variable_declaration
          (primitive_type)
          (variable_identifier)))
      (comment)
      (statement
        (variable_declaration
          (reference_type)
          (variable_identifier)))
      (comment)
      (function_definition
        (primitive_type)
        (variable_identifier)
        (block
          (statement
            (member_identifier
              (variable_identifier)))))
      (comment)
      (function_definition
        (primitive_type)
        (variable_identifier)
        (variable_declaration
          (primitive_type)
          (variable_identifier))
        (block
          (statement
            (chuck_operation
              (member_identifier
                (variable_identifier))
              (chuck_operator)
              (member_identifier
                (variable_identifier))))))
      (comment)
      (function_definition
        (primitive_type)
        (variable_identifier)
        (variable_declaration
          (primitive_type)
          (variable_identifier))
        (variable_declaration
          (primitive_type)
          (variable_identifier))
        (block
          (comment)))
      (comment)
      (function_definition
        (primitive_type)
        (variable_identifier)
        (block
          (statement
            (debug_print
              (member_identifier
                (variable_identifier))
              (member_identifier
                (variable_identifier))
              (member_identifier
                (variable_identifier))))))))
  (comment)
  (statement
    (variable_declaration
      (class_identifier)
      (variable_identifier)))
  (comment)
  (statement
    (function_call
      (member_identifier
        (variable_identifier)
        (variable_identifier))
      (int)))
  (comment)
  (statement
    (debug_print
      (function_call
        (member_identifier
          (variable_identifier)
          (variable_identifier)))))
  (comment)
  (statement
    (function_call
      (member_identifier
        (variable_identifier)
        (variable_identifier)))))

============
Constructors
============

// connecting UGens, with construtors
SinOsc foo( 440 ) => Gain g( .5 ) => dac;
// `new` and assignment
new TriOsc( 440, 0.5 ) @=> Osc @ oscillator;
// can combine constructors with arrays
string arr( "foo" )[10];

---

(source_file
  (comment)
  (statement
    (chuck_operation
      (chuck_operation
        (variable_declaration
          (class_identifier)
          (function_call
            (member_identifier
              (variable_identifier))
            (int)))
        (chuck_operator)
        (variable_declaration
          (class_identifier)
          (function_call
            (member_identifier
              (variable_identifier))
            (float))))
      (chuck_operator)
      (member_identifier
        (global_unit_generator))))
  (comment)
  (statement
    (chuck_operation
      (class_instantiation
        (function_call
          (member_identifier
            (class_identifier))
          (int)
          (float)))
      (chuck_operator)
      (reference_declaration
        (class_identifier)
        (variable_identifier))))
  (comment)
  (statement
    (array_declaration
      (reference_type)
      (function_call
        (member_identifier
          (variable_identifier))
        (string))
      (int))))
