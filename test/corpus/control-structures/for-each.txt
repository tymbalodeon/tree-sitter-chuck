========
For each
========

// an array
[1,2,3] @=> int array[];
// for each element 'a' in array 'array'
for( int a : array )
{
    // debug-print value of 'a'
    <<< a >>>;
}

// OR over a literal array of value
for( int a : [4,5,6] )
{
    // debug-print value of 'a'
    <<< a >>>;
}

// ALSO can make use the 'auto' type
for( auto a : array )
{
    // 'a' is automatically inferred from context to be of type 'int'
    <<< a >>>;
}

---

(source_file
  (comment)
  (chuck_operation
    (array
      (int)
      (int)
      (int))
    (array_declaration
      (primitive_type)
      (array_identifier
        (variable_identifier))))
  (comment)
  (for_each_loop
    (variable_declaration
      (primitive_type)
      (variable_identifier))
    (variable_identifier)
    (block
      (comment)
      (debug_print
        (variable_identifier))))
  (comment)
  (for_each_loop
    (variable_declaration
      (primitive_type)
      (variable_identifier))
    (array
      (int)
      (int)
      (int))
    (block
      (comment)
      (debug_print
        (variable_identifier))))
  (comment)
  (for_each_loop
    (variable_declaration
      (primitive_type)
      (variable_identifier))
    (variable_identifier)
    (block
      (comment)
      (debug_print
        (variable_identifier)))))
