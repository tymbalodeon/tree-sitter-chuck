======
Repeat
======

// repeat loop
repeat( 4 )
{
    // print now in seconds
    <<< now / second >>>;
    // advance time
    500::ms => now;
}

---

(source_file
  (comment)
  (loop
    (int)
    (block
      (comment)
      (statement
        (debug_print
          (binary_expression
            (keyword
              (special_literal_value))
            (operator)
            (keyword
              (duration_identifier)))))
      (comment)
      (statement
        (chuck_operation
          (dur
            (int)
            (duration_identifier))
          (chuck_operator)
          (keyword
            (special_literal_value)))))))

================
Repeat condition
================

// variable
5 => int x;

// in the repeat condition, 'x' is evaluated once and only once, at
// the start of the loop; if the value of x is updated subsequently,
// it will not alter the number of repetitions
repeat( x )
{
    // print now in seconds
    <<< now / second >>>;
    // advance time
    500::ms => now;
}

---

(source_file
  (comment)
  (statement
    (chuck_operation
      (int)
      (chuck_operator)
      (variable_declaration
        (primitive_type)
        (variable_identifier))))
  (comment)
  (comment)
  (comment)
  (loop
    (variable_identifier)
    (block
      (comment)
      (statement
        (debug_print
          (binary_expression
            (keyword
              (special_literal_value))
            (operator)
            (keyword
              (duration_identifier)))))
      (comment)
      (statement
        (chuck_operation
          (dur
            (int)
            (duration_identifier))
          (chuck_operator)
          (keyword
            (special_literal_value)))))))
