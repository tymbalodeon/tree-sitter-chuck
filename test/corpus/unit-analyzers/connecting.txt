================
upChucK operator
================

// instantiate FFT and flux objects,
// connect to allow computation of spectrum and spectral flux on adc input
adc => FFT fft =^ Flux flux => blackhole;

---

(source_file
  (comment)
  (comment)
  (statement
    (chuck_operation
      (chuck_operation
        (chuck_operation
          (member_identifier
            (global_unit_generator))
          (chuck_operator)
          (variable_declaration
            (class_identifier)
            (variable_identifier)))
        (chuck_operator)
        (variable_declaration
          (class_identifier)
          (variable_identifier)))
      (chuck_operator)
      (member_identifier
        (global_unit_generator)))))

===============
Pulling samples
===============

// Set up analysis on adc, via an FFT object, a spectral flux object, and a
// made-up object called a FluxCapacitor that operates on the flux value.
adc => FFT f =^ Flux flux =^ FluxCapacitor flux_capacitor => blackhole;

---

(source_file
  (comment)
  (comment)
  (statement
    (chuck_operation
      (chuck_operation
        (chuck_operation
          (chuck_operation
            (member_identifier
              (global_unit_generator))
            (chuck_operator)
            (variable_declaration
              (class_identifier)
              (variable_identifier)))
          (chuck_operator)
          (variable_declaration
            (class_identifier)
            (variable_identifier)))
        (chuck_operator)
        (variable_declaration
          (class_identifier)
          (variable_identifier)))
      (chuck_operator)
      (member_identifier
        (global_unit_generator)))))

======================
Mixing UGens and UAnas
======================

//Chain a sine into a reverb, then perform FFT, then IFFT, then apply gain, then output
SinOsc s => JCRev r => FFT f =^ IFFT i => Gain g => dac;
// Chuck a second sine into the FFT
SinOsc s2 => f;
// Chuck a third sine into the final gain
SinOsc s3 => g;

---

(source_file
  (comment)
  (statement
    (chuck_operation
      (chuck_operation
        (chuck_operation
          (chuck_operation
            (chuck_operation
              (variable_declaration
                (class_identifier)
                (variable_identifier))
              (chuck_operator)
              (variable_declaration
                (class_identifier)
                (variable_identifier)))
            (chuck_operator)
            (variable_declaration
              (class_identifier)
              (variable_identifier)))
          (chuck_operator)
          (variable_declaration
            (class_identifier)
            (variable_identifier)))
        (chuck_operator)
        (variable_declaration
          (class_identifier)
          (variable_identifier)))
      (chuck_operator)
      (member_identifier
        (global_unit_generator))))
  (comment)
  (statement
    (chuck_operation
      (variable_declaration
        (class_identifier)
        (variable_identifier))
      (chuck_operator)
      (member_identifier
        (variable_identifier))))
  (comment)
  (statement
    (chuck_operation
      (variable_declaration
        (class_identifier)
        (variable_identifier))
      (chuck_operator)
      (member_identifier
        (variable_identifier)))))
