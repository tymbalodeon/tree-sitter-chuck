============
Custom event
============

// extended event
class TheEvent extends Event
{
    int value;
}

// the event
TheEvent e;

// handler
fun int hi( TheEvent event )
{
    while( true )
    {
        // wait on event
        event => now;
        // get the data
        <<<e.value>>>;
    }
}

// spork
spork ~ hi( e );
spork ~ hi( e );
spork ~ hi( e );
spork ~ hi( e );

// infinite time loop
while( true )
{
    // advance time
    1::second => now;

    // set data
    Math.rand2( 0, 5 ) => e.value;

    // signal one waiting shred
    e.signal();
}

---

(source_file
  (comment)
  (class_definition
    (class_identifier)
    (class_identifier)
    (block
      (statement
        (variable_declaration
          (primitive_type)
          (variable_identifier)))))
  (comment)
  (statement
    (variable_declaration
      (class_identifier)
      (variable_identifier)))
  (comment)
  (function_definition
    (primitive_type)
    (variable_identifier)
    (variable_declaration
      (class_identifier)
      (variable_identifier))
    (block
      (loop
        (keyword
          (boolean_literal_value))
        (block
          (comment)
          (statement
            (chuck_operation
              (variable_identifier)
              (chuck_operator)
              (keyword
                (special_literal_value))))
          (comment)
          (statement
            (debug_print
              (member_identifier
                (variable_identifier)
                (variable_identifier))))))))
  (comment)
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier))))
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier))))
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier))))
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier))))
  (comment)
  (loop
    (keyword
      (boolean_literal_value))
    (block
      (comment)
      (statement
        (chuck_operation
          (dur
            (int)
            (duration_identifier))
          (chuck_operator)
          (keyword
            (special_literal_value))))
      (comment)
      (statement
        (chuck_operation
          (function_call
            (member_identifier
              (class_identifier)
              (variable_identifier))
            (int)
            (int))
          (chuck_operator)
          (member_identifier
            (variable_identifier)
            (variable_identifier))))
      (comment)
      (statement
        (function_call
          (member_identifier
            (variable_identifier)
            (variable_identifier)))))))
