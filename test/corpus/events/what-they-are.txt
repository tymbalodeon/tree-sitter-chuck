=====
Event
=====

// declare event
Event e;

// function for shred
fun void eventshred( Event event, string msg )
{
    // infinite loop
    while ( true )
    {
        // wait on event
        event => now;
        // print
        <<<msg>>>;
    }
}

// create shreds
spork ~ eventshred ( e, "fee" );
spork ~ eventshred ( e, "fi" );
spork ~ eventshred ( e, "fo" );
spork ~ eventshred ( e, "fum" );

// infinite time loop
while ( true )
{
    // either signal or broadcast
    if( maybe )
    {
        <<<"signaling...">>>;
        e.signal();
    }
    else
    {
        <<<"broadcasting...">>>;
        e.broadcast();
    }

    // advance time
    0.5::second => now;
}

---

(source_file
  (comment)
  (statement
    (variable_declaration
      (reference_type)
      (variable_identifier)))
  (comment)
  (function_definition
    (primitive_type)
    (variable_identifier)
    (variable_declaration
      (reference_type)
      (variable_identifier))
    (variable_declaration
      (reference_type)
      (variable_identifier))
    (block
      (comment)
      (loop
        (keyword
          (special_literal_value))
        (block
          (comment)
          (statement
            (chuck_operation
              (variable_identifier)
              (chuck_operator)
              (keyword
                (special_literal_value))))
          (comment)
          (statement
            (debug_print
              (variable_identifier)))))))
  (comment)
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier)
        (string))))
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier)
        (string))))
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier)
        (string))))
  (statement
    (spork_expression
      (function_call
        (variable_identifier)
        (variable_identifier)
        (string))))
  (comment)
  (loop
    (keyword
      (special_literal_value))
    (block
      (comment)
      (conditional
        (keyword
          (special_literal_value))
        (block
          (statement
            (debug_print
              (string)))
          (statement
            (function_call
              (member_identifier
                (variable_identifier)
                (variable_identifier)))))
        (block
          (statement
            (debug_print
              (string)))
          (statement
            (function_call
              (member_identifier
                (variable_identifier)
                (variable_identifier))))))
      (comment)
      (statement
        (chuck_operation
          (dur
            (float)
            (duration_identifier))
          (chuck_operator)
          (keyword
            (special_literal_value)))))))
