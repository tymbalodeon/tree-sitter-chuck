====
MIDI
====

MidiIn min;
MidiMsg msg;

// open midi receiver, exit on fail
if ( !min.open(0) ) me.exit();

while( true )
{
    // wait on midi event
    min => now;

    // receive midimsg(s)
    while( min.recv( msg ) )
    {
        // print content
    	<<< msg.data1, msg.data2, msg.data3 >>>;
    }
}

---

(source_file
  (statement
    (variable_declaration
      (class_identifier)
      (variable_identifier)))
  (statement
    (variable_declaration
      (class_identifier)
      (variable_identifier)))
  (comment)
  (conditional
    (negation_expression
      (function_call
        (member_identifier
          (variable_identifier)
          (variable_identifier))
        (int)))
    (statement
      (function_call
        (member_identifier
          (variable_identifier)))))
  (loop
    (keyword)
    (block
      (comment)
      (statement
        (chuck_operation
          (member_identifier
            (variable_identifier))
          (chuck_operator)
          (keyword)))
      (comment)
      (loop
        (function_call
          (member_identifier
            (variable_identifier)
            (variable_identifier))
          (member_identifier
            (variable_identifier)))
        (block
          (comment)
          (statement
            (debug_print
              (member_identifier
                (variable_identifier)
                (variable_identifier))
              (member_identifier
                (variable_identifier)
                (variable_identifier))
              (member_identifier
                (variable_identifier)
                (variable_identifier)))))))))
